name: deploy
on:
  push:
    branches:
      - main

jobs:
  cache_checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/upload-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
          path: ${{ github.workspace }}/**/*
      - uses: actions/setup-node@v3
        with:
          node-version: 20

  install:
    needs: cache_checkout
    runs-on: ubuntu-latest
    outputs:
      node_modules_cache: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Get Cached Checkout
        uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Upload node_modules as artifact
        uses: actions/upload-artifact@v3
        with:
          name: node_modules
          path: node_modules

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Get Cached Checkout
        uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node_modules
          path: .
      - name: lint
        run: npm run lint

  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Get Cached Checkout
        uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node_modules
          path: .
      - name: test
        run: npm run test

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Get Cached Checkout
        uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Download node_modules artifact
        uses: actions/download-artifact@v3
        with:
          name: node_modules
          path: .
      - name: build
        run: npm run build

  deploy:
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Upload to S3
        run: aws s3 sync dist/ng-app-cloud-computing/browser s3://ng-app-music-data

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id E2RL22S5DD3N3S --paths "/*"
