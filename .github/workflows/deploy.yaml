name: deploy
on:
  push:
    branches:
      - main
jobs:
  cache_checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/upload-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
          path: ${{ github.workspace }}/**/*
  install:
    needs: cache_checkout
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Cache npm dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm install
  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-
      - name: lint
        run: npm run lint
  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-
      - name: test
        run: npm run test
  deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: checkout-${{ github.run_id }}
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-
      - name: build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Upload to S3
        run: aws s3 sync dist/ng-app-cloud-computing/browser s3://ng-app-music-data

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id E2RL22S5DD3N3S --paths "/*"
